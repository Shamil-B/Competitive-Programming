# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:

        current1, current2 = list1, list2
        if not list1 and not list2:
            return
        new = ListNode()
        current3 = new
        while current1 and current2:
            current3.next = ListNode()
            if current1.val < current2.val:
                current3.val = current1.val
                current1 = current1.next
                current3 = current3.next

            else:
                current3.val = current2.val
                current2 = current2.next
                current3 = current3.next

            
            
    
        while current1:
            current3.val = current1.val
            if current1 and current1.next:
                current3.next = ListNode()
                current3 = current3.next

            current1 = current1.next

        while current2:
            current3.val = current2.val
            if current2 and current2.next:
                current3.next = ListNode()
                current3 = current3.next
            current2 = current2.next


        return new

